plugins {
    id "fabric-loom" version "1.8-SNAPSHOT"
}

version = project.mod_version
group = project.maven_group
description = "Mapart utilities, featuring slimmed down edition of V's printer."

configurations {
    implementation.extendsFrom(api)
    shadow.extendsFrom(api)
}

repositories {
    maven { url 'https://jitpack.io' }

    maven {
        name = "Meteor Dev Releases"
        url = "https://maven.meteordev.org/releases"
    }

    maven {
        name = "Meteor Dev Snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }

    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://masa.dy.fi/maven" }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"
    modImplementation "meteordevelopment:baritone:${project.minecraft_version}-SNAPSHOT"

    // Litematica
    modImplementation "curse.maven:litematica-${project.litematica_projectid}:${project.litematica_fileid}"
    modImplementation "curse.maven:malilib-${project.malilib_projectid}:${project.malilib_fileid}"
}

loom {
    accessWidenerPath = file("src/main/resources/moe-utils.accesswidener")
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
            "mc_version": project.minecraft_version,
            "description": project.description
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}

java {
    def javaVersion = JavaVersion.toVersion(21)

    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(21)
    }

    archivesBaseName = project.archives_base_name
}
